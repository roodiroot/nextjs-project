import axios from "axios";
import { useState } from "react";
import { toast } from "react-hot-toast";
import { FieldValues, SubmitHandler, useForm } from "react-hook-form";

import Modal from "./Modal";
import Heading from "../Heading";
import InputClient from "../inputs/InputClient";
import useBasketOrder from "@/hooks/useBasketOrder";
import useBasketStore from "@/hooks/useBasketStore";

import { INSTALLATION } from "@/constans";
import CheckSlider from "../utils-component/CheckSlider";

const BasketModal = () => {
  const { isOpen, onClose, total, prod } = useBasketOrder();
  const basket = useBasketStore();
  const [policy, setPolicy] = useState(false);
  const [isLoading, setIsLoading] = useState(false);
  const {
    register,
    handleSubmit,
    reset,
    formState: { errors },
  } = useForm<FieldValues>({
    defaultValues: {
      name: "",
      phone: "",
    },
  });

  const onSubmit: SubmitHandler<FieldValues> = (data) => {
    if (!policy) {
      toast.error("–°–æ–≥–ª–∞—Å–∏—Ç–µ—Å—å –Ω–∞ –æ–±—Ä–∞–±–æ—Ç–∫—É –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö");
      setIsLoading(false);
      return;
    }

    if (total.totalPrice) {
      setIsLoading(true);
      const message = `
        –∑–∞–∫–∞–∑: 
        ${prod.map((l: any) => `${l.name} –ø–æ —Ü–µ–Ω–µ ${l.price}`)}
        ${
          total.distance
            ? `–î–æ—Å—Ç–∞–≤–∫–∞ –∑–∞ –ú–ö–ê–î ${total.distance} –∫–º`
            : "–ë–µ–∑ –¥–æ—Å—Ç–∞–≤–∫–∏"
        }
        ${
          total.installation
            ? `–£—Å—Ç–∞–Ω–æ–≤–∫–∞: ${INSTALLATION} —Ä—É–±.`
            : "–ë–µ–∑ —É—Å—Ç–∞–Ω–æ–≤–∫–∏"
        }
        –ò–¢–û–ì–û ${total.totalPrice} —Ä—É–±.
        ${data.name}
        ${data.phone}
        `;
      axios
        .post("https://api-shop.kondish.su/message", {
          message: message,
        })
        .then(() => {
          toast.success("–û–∂–∏–¥–∞–π—Ç–µ –∑–≤–æ–Ω–∫–∞");
          // @ts-ignore
          window.ym(93762617, "reachGoal", "target2");
          onClose();
          basket.reset();
          reset();
        })
        .catch((error) => toast.success("–æ—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ñ–æ—Ä–º—ã"))
        .finally(() => {
          setIsLoading(false);
        });
      return;
    }
    toast("–í–∞—à–∞ –∫–æ—Ä–∑–∏–Ω–∞ –ø—É—Å—Ç–∞", { icon: "ü§∑‚Äç‚ôÇÔ∏è" });
  };

  const header = (
    <div className="sm:text-lg">
      –í –∑–∞–∫–∞–∑–µ:
      {prod.map((l: any) => (
        <div key={l.name}>
          <span className="font-bold">{l.name}</span>{" "}
          <span>–¶–µ–Ω–∞: {l.price} —Ä—É–±.</span>
        </div>
      ))}
      <div>
        {total.distance
          ? `–î–æ—Å—Ç–∞–≤–∫–∞ –∑–∞ –ú–ö–ê–î ${total.distance} –∫–º`
          : "–ë–µ–∑ –¥–æ—Å—Ç–∞–≤–∫–∏"}
      </div>
      <div>
        {total.installation
          ? `–£—Å—Ç–∞–Ω–æ–≤–∫–∞: ${INSTALLATION} —Ä—É–±.`
          : "–ë–µ–∑ —É—Å—Ç–∞–Ω–æ–≤–∫–∏"}
      </div>
      <div>
        –ò—Ç–æ–≥–æ: <span className="font-bold">{total.totalPrice} —Ä—É–±.</span>
      </div>
    </div>
  );

  const bodyContent = (
    <div className="flex flex-col gap-4">
      <Heading className="pb-0" title="–û—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ –∑–∞–∫–∞–∑–∞" />
      {header}
      <InputClient
        id="name"
        label="–ò–º—è"
        disabled={isLoading}
        register={register}
        errors={errors}
        required
      />
      <InputClient
        id="phone"
        label="–¢–µ–ª–µ—Ñ–æ–Ω"
        type="number"
        disabled={isLoading}
        register={register}
        errors={errors}
        required
      />
      <div className="flex items-center gap-2">
        <CheckSlider value={policy} setvalue={setPolicy} />{" "}
        <span>
          –°–æ–≥–ª–∞—Å–∏–µ –Ω–∞ –æ–±—Ä–∞–±–æ—Ç–∫—É{" "}
          <a className="text-orange-500" target="_blank" href="/doc/pd-consent">
            –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
          </a>
        </span>
        .
      </div>
    </div>
  );
  const footerContent = (
    <div className="text-sm text-slate-500 font-light">
      –ü–æ—Å–ª–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –∑–∞–∫–∞–∑–∞ –æ–∂–∏–¥–∞–π—Ç–µ –∑–≤–æ–Ω–∫–∞ —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–∞, –¥–ª—è —Å–æ–≥–ª–∞—Å–æ–≤–∞–Ω–∏—è
      –¥–µ—Ç–∞–ª–µ–π –∑–∞–∫–∞–∑–∞
    </div>
  );
  return (
    <div>
      <Modal
        actionLabel="–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç –∑–∞–∫–∞–∑"
        isOpen={isOpen}
        onClose={onClose}
        disabled={isLoading}
        body={bodyContent}
        onSubmit={handleSubmit(onSubmit)}
        footer={footerContent}
      />
    </div>
  );
};

export default BasketModal;
